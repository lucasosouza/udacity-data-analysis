a<-2
demo()
graphics::abline()
plot.new
plot.new()
graphics::abline()
a<-3
a<-4
clear
clear()
install.packages("swirl")
library(swirl)
swirl()
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Joao Pedro")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
udacious[mystery >= 11]
data(mtcars)
names(mtcars)
View(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
head(mtcars)
tail(mtcars, 3)
?nchar
mtcars$mpg
mtcars$hp
mtcars$gear
mtcars$hp$gear
mean(mtcars$hp)
mean(mtcars$gear)
mean(mtcars$mpg)
getwd()
cd..
setwd("C:\Dev\R")
setwd('C:\Dev\R')
setwd('C:/Dev/R')
getwd()
dir()
open('lesson2')
setwd('C:/Dev/R/lesson2')
dir()
statesInfo <- read.csv('stateData.csv')
View(statesInfo)
subset(statesInfo, state.region == 1)
statesInfo[statesInfo$state.region == 1, ]
statesSubset <- subset(statesInfo, state.region == 1)
head(statesSubset,2)
tail(statesSubset,2)
dim(statesSubset)
statesSubset <- subset(statesInfo, state.region == 1)
head(statesSubset,2)
tail(statesSubset,2)
dim(statesSubset)
head(statesSubset,2)
tail(statesSubset,2)
dim(statesSubset)
columns(statesSubset)
variables(statesSubset)
colnames(statesSubset)
statesSubset <- subset(statesInfo, life.exp == 1)
head(statesSubset,2)
tail(statesSubset,2)
dim(statesSubset)
statesSubset <- subset(statesInfo, life.exp > 70)
head(statesSubset,2)
tail(statesSubset,2)
dim(statesSubset)
statesSubset <- subset(statesInfo, life.exp < 65)
head(statesSubset,2)
tail(statesSubset,2)
dim(statesSubset)
statesSubset <- subset(statesInfo, illiteracy < 0.5)
head(statesSubset,2)
tail(statesSubset,2)
dim(statesSubset)
statesSubset <- subset(statesInfo, illiteracy < 0.5)
statesSubset
dim(statesSubset)
str(statesInfo)
statesSubset <- subset(statesInfo, illiteracy < 1.0)
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5)
statesSubset
str(statesInfo)
statesInfo[,5:10]
statesInfo[,5:6]
statesSubset <- subset(statesInfo, illiteracy <= 0.5, 5:6)
statesSubset
statesSubset <- statesInfo[statesInfo$state.region == 1, 5:6]
statesSubset <- statesInfo[statesInfo$state.region == 1, 5:6]
statesSubset
dim(statesSubset)
statesSubset <- subset(statesInfo, illiteracy <= 0.5, !5:6)
statesSubset
statesInfo <- read.csv('stateData.csv')
str(statesInfo)
statesSubset <- subset(statesInfo, illiteracy <= 0.5, !5:6)
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5, !5)
statesSubset
statesSubset <- statesInfo[statesInfo$state.region == 1, !5:6]
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5, -5:-7)
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5, [-2,-5,-8])
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5, c(-2,-5,-8))
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5, c(-1,-2,-5,-8))
statesSubset
statesSubset <- statesInfo[state.region == 1, !5:6]
statesSubset
statesSubset <- statesInfo[ which(state.region == 1 & murder < 20), !5:6]
statesSubset
statesSubset <- statesInfo[ which(state.region == 1 & murder < 20), ]
statesSubset
statesSubset <- statesInfo[ which(state.region == 1 & state.area > 20), ]
statesSubset
attach(statesInfo)
statesSubset <- statesInfo[ which(state.region == 1 & state.area > 20), ]
statesSubset
attach(statesInfo)
statesSubset <- statesInfo[ which(state.region == 1 & state.area > 20), ]
statesSubset
detach(statesInfo)
?attach
with(statesInfo,
statesSubset <- statesInfo[ which(state.region == 1 & state.area > 20), ]
statesSubset
)
with(statesInfo, statesSubset <- statesInfo[ which(state.region == 1 & state.area > 2000), ])
statesSubset
with(statesInfo, statesSubset <- statesInfo[ which(state.region == 1 & state.area > 20000), ])
statesSubset
with(statesInfo, statesSubset <- statesInfo[ which(state.region == 2 & state.area > 20000), ])
statesSubset
with(statesInfo, statesSubset <- statesInfo[ which(state.region == 2 & state.area > 20000), ])
statesSubset
with(statesInfo,{
statesSubset <- statesInfo[ which(state.region == 2 & state.area > 20000), ]
statesSubset
} )
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5 & state.area<20000, c(-1,-2,-5,-8))
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5 & state.area>20000, c(-1,-2,-5,-8))
statesSubset
statesSubset <- subset(statesInfo, illiteracy <= 0.5 & state.area>20000, c(-2,-5,-8))
statesSubset
dim(statesSubset)
statesSubset <- subset(statesInfo, illiteracy <= 0.5 & state.area>20000, select=income:murder)
statesSubset
dim(statesSubset)
statesSubset <- statesInfo[ sample(1:nrow(statesInfo),10, replace=TRUE), ]
statesSubset
statesSubset <- statesInfo[ sample(1:nrow(statesInfo),10, replace=TRUE), ]
statesSubset
statesSubset <- statesInfo[ sample(1:nrow(statesInfo),10, replace=FALSE), ]
statesSubset
statesSubset <- statesInfo[ sample(1:nrow(statesInfo),40, replace=FALSE), ]
statesSubset
statesSubset <- statesInfo[ sample(1:nrow(statesInfo),100, replace=FALSE), ]
statesSubset
statesSubset <- statesInfo[ sample(1:nrow(statesInfo),100, replace=TRUE), ]
statesSubset
summary(mtcars)
```{r}
```{r}
View(mtcars)
summary(mtcars)
efficient
efficient <- subset(mtcars, mpg>=23)
efficient
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec<=16.90)
lightCars(mtcars, wt<2000)
lightCars <- subset(mtcars, wt<2000)
lightCars
lightCars <- subset(mtcars, wt<2000)
lightCars
lightCars <- subset(mtcars, wt<2.000)
lightCars
mtcars$year <- 1974
mtcars$year <- 1974
mtcars$year <- 1974
mtcars$year <- 1974
mtcars$yearr <- 1974
mtcars <- subset(mtcars, select = -year)
mtcars <- subset(mtcars, select = -yearr)
mtcars$year <- c(1973, 1974)
View(mtcars)
mtcars <- subset(mtcars, -year)
mtcars <- subset(mtcars, c(-year))
mtcars <- subset(mtcars, select= -year)
mtcars$wt
cond <- mtcars$wt < 3
```{r}
```{r}
rm(cond)
rm(efficient)
rm(cond)
rm(efficient)
```{r}
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
library(knitr)
subset(mtcars, mpg>=30 & hp<60)
subset(mtcars, mpg>=30 | hp<60)
