scale_x_discrete(breaks=seq(0,max(Mitchell$Month),12)) +
coord_trans(y='sqrt')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,max(Mitchell$Month),12)) +
coord_trans(y='sqrt')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,max(Mitchell$Month),12)) +
coord_trans(y='log10')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,max(Mitchell$Month),12)) +
scale_y_log10()
ggplot(data=Mitchell, aes(x=Month*100, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,max(Mitchell$Month),12))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,max(Mitchell$Month),12)) +
coord_trans(x='exp')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
coord_trans(x='exp')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
coord_trans(x='sqrt')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
coord_trans(x='log')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
coord_trans(x='log10')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,1000,12))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,2000,12))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,2000,12))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,2000,12), xlim=(0,2000))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,2000,12), xlim=c(0,2000))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(breaks=seq(0,2000,12), limits=c(0,2000))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_discrete(limits=c(0,2000), breaks=seq(0,203,12))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_continuous(limits=c(0,2000), breaks=seq(0,203,12))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_continuous(limits=c(0,5000), breaks=seq(0,203,12))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_continuous(limits=c(0,10000), breaks=seq(0,203,12))
ggplot(data=Mitchell, aes(x=floor(Month/12), y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,12))
ggplot(data=Mitchell, aes(x=floor(Month/12), y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,12)) +
geom_line(stats='summary', fun.y=mean)
ggplot(data=Mitchell, aes(x=floor(Month/12), y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,12)) +
geom_line(stat='summary', fun.y=mean)
ggplot(data=Mitchell, aes(x=floor(Month/12), y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,12)) +
geom_line(stat='summary', fun.y=quantile, prob=0.5, color=blue)
ggplot(data=Mitchell, aes(x=floor(Month/12), y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,12)) +
geom_line(stat='summary', fun.y=quantile, prob=0.5, color='blue')
ggplot(data=Mitchell, aes(x=floor(Month/12), y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,12)) +
geom_line(stat='summary', fun.y=quantile, prob=0.5, color='blue') +
geom_line(stat='summary', fun.y=quantile, prob=0.1, color='red') +
geom_line(stat='summary', fun.y=quantile, prob=0.9, color='green')
ggplot(data=Mitchell, aes(x=floor(Month/12), y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,50,1)) +
geom_line(stat='summary', fun.y=quantile, prob=0.5, color='blue') +
geom_line(stat='summary', fun.y=quantile, prob=0.1, color='red') +
geom_line(stat='summary', fun.y=quantile, prob=0.9, color='green')
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,1))
ggplot(data=Mitchell, aes(x=Month %% 12, y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,50,1))
ggplot(data=Mitchell, aes(x=Month, y=Temp)) +
geom_point() +
scale_x_continuous(breaks=seq(0,203,12))
names(pf)
head(pf)
subset(pf, pf$age = 14)
subset(pf, pf$age == 14)
names(pf)
subset(pf, pf$age == 14, select=c(dob_month, dob_year))
subset(pf, pf$age == 14 % pf$dob_year <> 1999, select=c(dob_month, dob_year))
subset(pf, pf$age == 14 % pf$dob_year != 1999, select=c(dob_month, dob_year))
subset(pf, pf$age == 14 & pf$dob_year != 1999, select=c(dob_month, dob_year))
subset(pf, pf$age == 14 & pf$dob_year <> 1999, select=c(dob_month, dob_year))
pf$age_with_months <- pf$age*12 + 12 - pf$month
pf$age_with_months <- pf$age*12 + 12 - pf$dbo_month
names(pf)
pf$age_with_months <- pf$age*12 + 12 - pf$dob_month
head(pf)
pf$age_with_months <- pf$age + (12-pf$dob_month)/12
head(pf)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
View(pf.fc_by_age_months)
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=median_friend_count)) +
geom_point()
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=median_friend_count)) +
geom_point() +
scale_x_continuous(breaks=seq(10,150,1))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=median_friend_count)) +
geom_point() +
scale_x_continuous(breaks=seq(10,150,1)) +
coord_cartesian(xlim=(13,80))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=median_friend_count)) +
geom_point() +
scale_x_continuous(breaks=seq(10,150,1)) +
coord_cartesian(xlim=c(13,80))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=median_friend_count)) +
geom_point() +
scale_x_continuous(breaks=seq(10,150,1)) +
coord_cartesian(xlim=c(13,80), ylim=c(0,250))
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age_with_months)
head(pf.fc_by_age_months)
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(10,150,1)) +
coord_cartesian(xlim=c(13,71), ylim=c(0,250))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
coord_cartesian(xlim=c(13,71), ylim=c(0,250))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(10,150,1)) +
coord_cartesian(xlim=c(13,71), ylim=c(0,250))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(10,150,1)) +
coord_cartesian(xlim=c(15,25), ylim=c(0,250))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(10,150,1)) +
coord_cartesian(xlim=c(15,25), ylim=c(0,500))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(10,150,1/12)) +
coord_cartesian(xlim=c(15,20), ylim=c(0,500))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(10,150,1/4)) +
coord_cartesian(xlim=c(15,20), ylim=c(0,500))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(10,150,1/4)) +
coord_cartesian(xlim=c(15,20), ylim=c(250,450))
ggplot(data = pf.fc_by_age_months, aes(x=age_with_months, y=mean_friend_count)) +
geom_line() +
scale_x_continuous(breaks=seq(13,71,1)) +
coord_cartesian(xlim=c(13,71), ylim=c(0,500))
data(diamonds)
rm(list=ls())
data(diamonds)
name(diamonds)
names(diamonds)
ggplot(data=diamonds, aes(x=price, y=x)) +
geom_point()
?diamonds
p1 <- ggplot(data=diamonds, aes(x=price, y=x)) + geom_point()
p2 <- ggplot(data=diamonds, aes(x=price, y=y)) + geom_point()
p3 <- ggplot(data=diamonds, aes(x=price, y=z)) + geom_point()
p4 <- ggplot(data=diamonds, aes(x=price, y=carat)) + geom_point()
p5 <- ggplot(data=diamonds, aes(x=price, y=clarity)) + geom_point()
p6 <- ggplot(data=diamonds, aes(x=price, y=cut)) + geom_point()
p7 <- ggplot(data=diamonds, aes(x=price, y=colour)) + geom_point()
grid.arange(p1,p2,p3,p4,p5,p6,p7,ncol=3,nrow=3)
p1 <- ggplot(data=diamonds, aes(x=price, y=x)) + geom_point()
p2 <- ggplot(data=diamonds, aes(x=price, y=y)) + geom_point()
p3 <- ggplot(data=diamonds, aes(x=price, y=z)) + geom_point()
p4 <- ggplot(data=diamonds, aes(x=price, y=carat)) + geom_point()
p5 <- ggplot(data=diamonds, aes(x=price, y=clarity)) + geom_point()
p6 <- ggplot(data=diamonds, aes(x=price, y=cut)) + geom_point()
p7 <- ggplot(data=diamonds, aes(x=price, y=colour)) + geom_point()
grid.arrange(p1,p2,p3,p4,p5,p6,p7,ncol=3,nrow=3)
library(gridExtra)
p1 <- ggplot(data=diamonds, aes(x=price, y=x)) + geom_point()
p2 <- ggplot(data=diamonds, aes(x=price, y=y)) + geom_point()
p3 <- ggplot(data=diamonds, aes(x=price, y=z)) + geom_point()
p4 <- ggplot(data=diamonds, aes(x=price, y=carat)) + geom_point()
p5 <- ggplot(data=diamonds, aes(x=price, y=clarity)) + geom_point()
p6 <- ggplot(data=diamonds, aes(x=price, y=cut)) + geom_point()
p7 <- ggplot(data=diamonds, aes(x=price, y=colour)) + geom_point()
grid.arrange(p1,p2,p3,p4,p5,p6,p7,ncol=3,nrow=3)
?diamonds
names(diamonds)
p1 <- ggplot(data=diamonds, aes(x=price, y=x)) + geom_point()
p2 <- ggplot(data=diamonds, aes(x=price, y=y)) + geom_point()
p3 <- ggplot(data=diamonds, aes(x=price, y=z)) + geom_point()
p4 <- ggplot(data=diamonds, aes(x=price, y=carat)) + geom_point()
p5 <- ggplot(data=diamonds, aes(x=price, y=clarity)) + geom_point()
p6 <- ggplot(data=diamonds, aes(x=price, y=cut)) + geom_point()
p7 <- ggplot(data=diamonds, aes(x=price, y=color)) + geom_point()
grid.arrange(p1,p2,p3,p4,p5,p6,p7,ncol=3,nrow=3)
with(diamonds, cor.test(x=price, y=x))
with(diamonds, cor.test(x=price, y=x))
with(diamonds, cor.test(x=price, y=y))
with(diamonds, cor.test(x=price, y=z))
ggplot(data=diamonds, aes(x=price, y=depth)) + geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(min(diamonds$depth),max(diamonds$depth),2))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/10) +
scale_x_continuous(breaks=seq(min(diamonds$depth),max(diamonds$depth),2))
with(diamonds, cor.test(x=price, y=depth))
with(diamonds, cor.test(x=depth, y=price))
ggplot(data=diamonds, aes(x=price, y=carat)) + geom_point()
subset(diamonds, price < quantile(price, 0.99) & carat < quantile(price, 0.99))
ggplot(data=subset(diamonds, price < quantile(price, 0.99) & carat < quantile(price, 0.99)),
aes(x=price, y=carat)) +
geom_point()
ggplot(data=diamonds, aes(x=price, y=carat)) +
geom_point()
ggplot(data=subset(diamonds, price < quantile(price, 0.99) & carat < quantile(price, 0.99)),
aes(x=price, y=carat)) +
geom_point()
ggplot(data=subset(diamonds, price < quantile(price, 0.90) & carat < quantile(price, 0.90)),
aes(x=price, y=carat)) +
geom_point()
ggplot(data=subset(diamonds, price < quantile(price, 0.99) & carat < quantile(price, 0.99)),
aes(x=price, y=carat)) +
geom_point()
ggplot(data=subset(diamonds, price < quantile(price, 0.99) & carat < quantile(price, 0.99)),
aes(x=carat, y=price)) +
geom_point()
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
getwd()
setwd("c:/Dev/R/lesson4/Inequality")
df.poorest <- read.csv("Indicator_Income share held by lowest 10%.csv", sep=";")
View(df.poorest)
View(df.poorest)
count(df.pooret)
count(df.poorest)
names(df.poorest)
count(df.poorest$X1978)
count(df.poorest$X2004)
summarise_each(df.poorest)
?summarise_each
summarise_each(df.poorest, funs(count))
summarise_each(df.poorest, funs(n))
summarise_each(df.poorest, n)
summarise_each(df.poorest, funs(dplyr::n))
summarise_each(df.poorest, funs(dplyr::first))
summarise_each(df.poorest, funs('dplyr::first'))
summarise_each(df.poorest, funs('dplyr::n'))
summarise_each(df.poorest, funs('n'))
df.poorest %>% summarise_each(n)
df.poorest %>% summarise_each(funs(mean))
df.poorest %>% summarise_each(funs(n))
df.poorest %>% summarise_each(funs(count())
df.poorest %>% summarise_each(funs(count))
df.poorest %>% summarise_each(funs(count))
df.poorest %>% summarise_each(funs(n_distinct))
df.poorest.2005 <- subset(df.poorest, !is.na(X2005), select=X2005)
View(df.poorest.2005)
df.poorest.2005 <- subset(df.poorest, X2005 > 0, select=X2005)
df.poorest.2005 <- subset(df.poorest, num(X2005) > 0, select=X2005)
df.poorest.2005 <- subset(df.poorest, as.numeric(X2005) > 0, select=as.numeric(X2005))
View(df.poorest.2005)
df.poorest.2005 <- as.numeric(df.poorest$X2005 * 1)
df.poorest.2005 <- as.numeric(df.poorest$X2005) * 1
df.poorest.2005 <- as.numeric(df.poorest$X2005)
rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
df.poorest <- read.csv("Indicator_Income share held by lowest 10%.csv", sep=";")
View(df.poorest)
View(df.poorest)
str(df.poorest)
summary(df.pooret)
summary(df.poorest)
names(df.poorest)[1] <- "Country"
names(df.poorest)
df.poorest.2005 <- subset(df.poorest, !is.na(X2005), select=c(Country, X2005))
View(df.poorest.2005)
df.richest <- read.csv("Indicator_Income share held by highest 10%.csv", sep=";")
summary(df.richest)
names(df.richest)[1] <- "Country"
df.richest.2005 <- subset(df.richest, !is.na(X2005), select=c(Country, X2005))
View(df.richest.2005)
df.inequality <- merge(df.poorest.2005, df.richest.2005, by=c("Country"))
View(df.inequality)
names(df.inequality)[2,3] <- c(poorest, richest)
names(df.inequality)[2,3] <- c('poorest', 'richest')
names(df.inequality)[2,3]
names(df.inequality)[2:3]
names(df.inequality)[2:3] <- c('poorest', 'richest')
df.inequality$inequality <- df.inequality$richest / df.inequality$poorest
df.suicide <- read.csv("suicide.csv", sep=";")
df.suicide <- read.csv("suicide.csv", sep=";")
df.homicide <- read.csv("homicide.csv", sep=";")
df.working_hours <- read.csv("working_hours.csv", sep=";")
df.life_expectancy <- read.csv("life_expectancy.csv", sep=";")
View(df.working_hours)
View(df.working_hours)
names(df.suicide)[1] = "Country"
names(df.suicide)[1] = "Country"
names(df.homicide)[1] = "Country"
names(df.working_hours)[1] = "Country"
names(df.life_expectancy)[1] = "Country"
df.data <- merge(df.inequality, df.suicide, by=c("Country"))
View(df.data)
View(df.data)
name(df.data)[5] = "Suicide"
names(df.data)[5] = "Suicide"
df.data <- merge(df.data, df.homicide, by=c("Country"))
names(df.data)[6] = "Homicide"
df.data <- merge(df.data, df.life_expectancy, by=c("Country"))
names(df.data)[6] = "Life_Expectancy"
names(df.data)[7] = "Life_Expectancy"
names(df.data)[6] = "Homicide"
df.data <- merge(df.data, df.working_hours, by=c("Country"))
names(df.data)[8] = "Working_Hours"
View(df.data)
View(df.data)
df.inequality <- merge(df.poorest.2005, df.richest.2005, by=c("Country"))
names(df.inequality)[2:3] <- c('poorest', 'richest')
df.inequality$inequality <- df.inequality$richest / df.inequality$poorest
df.data <- merge(df.inequality, df.suicide, by=c("Country"))
names(df.data)[5] = "Suicide"
df.data <- merge(df.data, df.homicide, by=c("Country"))
names(df.data)[6] = "Homicide"
df.data <- merge(df.data, df.life_expectancy, by=c("Country"))
names(df.data)[7] = "Life_Expectancy"
ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point()
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point()
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point()
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point()
grid.arrange(p1,p2,p3,ncol=1)
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm")
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm")
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm")
grid.arrange(p1,p2,p3,ncol=1)
?geom_smooth
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_line(method="lm")
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm")
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm")
grid.arrange(p1,p2,p3,ncol=1)
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm", level=0.99)
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm", level=0.99)
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm", level=0.99)
grid.arrange(p1,p2,p3,ncol=1)
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm", level=0.99)
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm", level=0.99)
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm", level=0.99)
grid.arrange(p1,p2,p3,ncol=1)
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm", level=0.999)
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm", level=0.999)
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm", level=0.999)
grid.arrange(p1,p2,p3,ncol=1)
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm", level=0.1)
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm", level=0.1)
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm", level=0.1)
grid.arrange(p1,p2,p3,ncol=1)
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm", level=0.5)
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm", level=0.5)
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm", level=0.5)
grid.arrange(p1,p2,p3,ncol=1)
?geom_smooth
p1 <- ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm", se=FALSE)
p2 <- ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm", se=FALSE)
p3 <- ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm", se=FALSE)
grid.arrange(p1,p2,p3,ncol=1)
ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point(color=country) + geom_smooth(method="lm", se=FALSE)
ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point(color=Country) + geom_smooth(method="lm", se=FALSE)
names(df.data)
ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point(color='Country') + geom_smooth(method="lm", se=FALSE)
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country)) +
geom_point() + geom_smooth(method="lm", se=FALSE)
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country)) +
geom_point()
df.population <- read.csv("population.csv", sep=";")
names(df.population)[1] = "Country"
df.data <- merge(df.data, df.population, by=c("Country"))
names(df.data)[8] = "Population"
View(df.data)
df.data <- df.data[,1:8]
View(df.data)
View(df.data)
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point()
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point() + scale_area()
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point() + scale_size_area()
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point(size=10) + scale_size_area()
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point(size=2)
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point(size=5)
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point() +
scale_size_continuous(range = c(2,10))
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point() +
scale_size_continuous(range = c(3,10))
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point() +
scale_size_continuous(range = c(3,100))
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point() +
scale_size_continuous(range = c(3,20))
by(df.data$inequality, df.data$Homicide, summary)
with(df.data, cor.test(inequality, Homicide))
with(df.data, cor.test(inequality, Homicide))
with(df.data, cor.test(inequality, Suicide))
with(df.data, cor.test(inequality, Life_Expectancy))
with(df.data, cor.test(inequality, Population))
with(df.data, cor.test(inequality, Homicide))
View(df.data)
View(df.data)
ggplot(data=df.data, aes(x=inequality, y=Homicide, colour=Country, size=Population)) +
geom_point() +
scale_size_continuous(range = c(3,20))
with(df.data, cor.test(inequality, Population))
write.csv(df.data, "data.csv")
rm(list=ls())
```{r}
library(ggplot2)
df.data <-read.csv("data.csv")
View(df.data)
View(df.data)
library(ggplot2)
df.data <-read.csv("data.csv")[-1]
View(df.data)
ggplot(data=df.data, aes(x=inequality, y=Life_Expectancy)) +
geom_point() + geom_smooth(method="lm", se=FALSE)
with(df.data, cor.test(inequality, Life_Expectancy))
ggplot(data=df.data, aes(x=inequality, y=Suicide)) +
geom_point() + geom_smooth(method="lm", se=FALSE)
with(df.data, cor.test(inequality, Suicide))
ggplot(data=df.data, aes(x=inequality, y=Homicide)) +
geom_point() + geom_smooth(method="lm", se=FALSE)
with(df.data, cor.test(inequality, Homicide))
getwd()
rm(list=ls())
detach("package:tidyr", unload=TRUE)
library("tidyr", lib.loc="~/R/R-3.2.3/library")
clear()
cls()
clear
